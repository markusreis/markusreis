version: "3"

services:
  db:
    image: "mariadb:${MARIADB_VERSION}"
    volumes:
      - "db_data:/var/lib/mysql"
      - "./.docker/db/initdb.d:/docker-entrypoint-initdb.d"
    restart: always
    ports:
      - "${HOST_INTERFACE}:3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
  wordpress:
    volumes:
      - "./.docker/wordpress/php.ini:/usr/local/etc/php/conf.d/99-php.ini:ro"
      - "./wp:/var/www/html"
      - "./.docker/wordpress/.htaccess:/var/www/html/.htaccess"
    depends_on:
      - db
    image: "yesdevs/wordpress:php${PHP_VERSION}"
    environment:
      WORDPRESS_DB_HOST: "db:3306"
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_TABLE_PREFIX: ${WORDPRESS_DB_PREFIX}
      WORDPRESS_DEBUG: 1
      WORDPRESS_ENV: ${WORDPRESS_ENV}
      GOD_API_TOKEN: ${GOD_API_TOKEN}
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_CACHE', true);
        define('WP_DEBUG', true);
        define('DISABLE_WP_CRON', true);
        define( 'WP_DEBUG', true );
        define( 'WP_DEBUG_DISPLAY', false );
        define( 'WP_DEBUG_LOG', true );
    restart: always
  varnish:
    depends_on:
      - wordpress
    build:
      dockerfile: .docker/varnish/Dockerfile
      context: ./
      args:
        - VARNISH_VERSION=${VARNISH_VERSION}
    image: ylab/varnish:${VARNISH_VERSION}

  nginx:
    image: ylab/nginx-geo:latest
    ports:
      - "${HOST_INTERFACE}:80:80"
      - "${HOST_INTERFACE}:443:443"
    depends_on:
      - varnish
    build:
      dockerfile: Dockerfile-local
      context: .docker/nginx
    volumes:
      - ".docker/nginx/default_local.conf:/etc/nginx/conf.d/default.conf"
      - ".docker/nginx/nginx_local.conf:/etc/nginx/nginx.conf"

volumes:
  db_data:
